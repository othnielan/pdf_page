import{U as v,d as u}from"./chunk-DCPYCCPN.js";var b=class w{constructor(){}applyDrawingToPdf(n,e,r=0,l){return u(this,null,function*(){console.log("\u{1F58A}\uFE0F PenDrawingService: applyDrawingToPdf called"),console.log("\u{1F58A}\uFE0F PenDrawingService: PDF bytes length:",n.length),console.log("\u{1F58A}\uFE0F PenDrawingService: Drawn paths count:",e.length),console.log("\u{1F58A}\uFE0F PenDrawingService: Page index:",r),console.log("\u{1F58A}\uFE0F PenDrawingService: Canvas size:",l);try{console.log("\u{1F58A}\uFE0F PenDrawingService: Loading PDF document");let t=yield PDFLib.PDFDocument.load(n),a=t.getPages();if(console.log("\u{1F58A}\uFE0F PenDrawingService: Total pages:",a.length),r>=a.length){let c=`\uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uD398\uC774\uC9C0 \uC778\uB371\uC2A4\uC785\uB2C8\uB2E4. \uC694\uCCAD: ${r}, \uCD1D \uD398\uC774\uC9C0: ${a.length}`;throw console.error("\u{1F58A}\uFE0F PenDrawingService:",c),new Error(c)}let s=a[r],{width:i,height:g}=s.getSize();console.log("\u{1F58A}\uFE0F PenDrawingService: Page size:",{width:i,height:g});for(let c=0;c<e.length;c++){let o=e[c];if(console.log(`\u{1F58A}\uFE0F PenDrawingService: Processing path ${c+1}/${e.length}`),console.log("\u{1F58A}\uFE0F PenDrawingService: Path details:",{pointsCount:o.points.length,color:o.config.color,lineWidth:o.config.lineWidth,opacity:o.config.opacity}),o.points.length<2){console.log("\u{1F58A}\uFE0F PenDrawingService: Skipping path with insufficient points");continue}let P=this.hexToRgb(o.config.color);console.log("\u{1F58A}\uFE0F PenDrawingService: Converted color:",P);let D=this.createSVGPath(o.points,i,g,l);console.log("\u{1F58A}\uFE0F PenDrawingService: Generated SVG path length:",D.length),console.log("\u{1F58A}\uFE0F PenDrawingService: SVG path preview:",D.substring(0,100)+"..."),console.log("\u{1F58A}\uFE0F PenDrawingService: Drawing path to PDF"),s.drawSvgPath(D,{borderColor:PDFLib.rgb(P.r/255,P.g/255,P.b/255),borderWidth:o.config.lineWidth,opacity:o.config.opacity}),console.log("\u{1F58A}\uFE0F PenDrawingService: Path drawn successfully")}console.log("\u{1F58A}\uFE0F PenDrawingService: Saving modified PDF");let h=yield t.save();return console.log("\u{1F58A}\uFE0F PenDrawingService: Modified PDF bytes length:",h.length),h}catch(t){throw console.error("\u{1F58A}\uFE0F PenDrawingService: Error occurred:",t),t instanceof Error&&console.error("\u{1F58A}\uFE0F PenDrawingService: Error stack:",t.stack),t}})}createSVGPath(n,e,r,l){if(console.log("\u{1F58A}\uFE0F PenDrawingService: createSVGPath called"),console.log("\u{1F58A}\uFE0F PenDrawingService: Points count:",n.length),console.log("\u{1F58A}\uFE0F PenDrawingService: PDF dimensions:",{pdfWidth:e,pdfHeight:r}),console.log("\u{1F58A}\uFE0F PenDrawingService: Canvas size:",l),n.length<2)return console.log("\u{1F58A}\uFE0F PenDrawingService: Insufficient points for path"),"";let t=(i,g)=>{let h=l?.width||800,c=l?.height||600,o={x:i.x/h*e,y:r-i.y/c*r};return g<3&&console.log(`\u{1F58A}\uFE0F PenDrawingService: Point ${g} conversion:`,{original:i,canvasSize:{canvasWidth:h,canvasHeight:c},pdfSize:{pdfWidth:e,pdfHeight:r},converted:o}),o},a=t(n[0],0),s=`M ${a.x} ${a.y}`;for(let i=1;i<n.length;i++){let g=t(n[i],i);s+=` L ${g.x} ${g.y}`}return console.log("\u{1F58A}\uFE0F PenDrawingService: Generated SVG path:",s),s}hexToRgb(n){let e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(n);return e?{r:parseInt(e[1],16),g:parseInt(e[2],16),b:parseInt(e[3],16)}:{r:0,g:0,b:0}}convertCanvasToPdfCoordinates(n,e,r){return{x:n.x/e.width*r.width,y:r.height-n.y/e.height*r.height}}static \u0275fac=function(e){return new(e||w)};static \u0275prov=v({token:w,factory:w.\u0275fac,providedIn:"root"})};export{b as a};
